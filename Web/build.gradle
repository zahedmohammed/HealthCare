buildscript {
	ext {
		springBootVersion = '1.5.8.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

group = 'com.fxlabs'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


ext {
	springCloudVersion = 'Dalston.SR4'
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-actuator-docs')
	//compile('org.springframework.boot:spring-boot-starter-amqp')
	compile('org.springframework.boot:spring-boot-starter-aop')
	compile('org.springframework.boot:spring-boot-starter-cache')
	//compile('org.springframework.cloud:spring-cloud-starter-stream-rabbit')
	//compile('org.springframework.boot:spring-boot-starter-data-cassandra')
	//compile('org.springframework.boot:spring-boot-starter-data-jpa')
	//compile('org.springframework.boot:spring-boot-starter-data-ldap')
	//compile('org.springframework.boot:spring-boot-starter-data-solr')
	//compile('org.flywaydb:flyway-core')
	compile('org.springframework.retry:spring-retry')
	//compile('org.springframework.boot:spring-boot-starter-security')
	//compile('org.springframework.session:spring-session')
	compile('org.springframework.boot:spring-boot-starter-validation')
	//compile('org.springframework.boot:spring-boot-starter-web')
	//compile('org.springframework.boot:spring-boot-starter-websocket')
	runtime('org.springframework.boot:spring-boot-devtools')
	//runtime('org.postgresql:postgresql')
	//compileOnly('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
	testCompile('org.springframework.security:spring-security-test')

	// Modules
	compile project(":DAO")
	compile project(":REST")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
